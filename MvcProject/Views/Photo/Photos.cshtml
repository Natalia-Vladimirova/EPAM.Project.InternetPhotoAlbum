@using MvcProject.Infrastructure.Helpers
@model MvcProject.Models.PhotosViewModel

@{
    ViewBag.Title = "Photos";
}

<div class="row form-horizontal">
    <div class="col-md-6">
        <h2>@ViewBag.Title</h2>
        @if (User.Identity.Name == Model.ChosenUser.UserName)
        {
            <h5>
                @Html.ActionLink("Back to profile", $"Index/{Model.ChosenUser.Id}", "Home") |
                @if (string.IsNullOrWhiteSpace(ViewBag.PhotoName))
                {
                    @Html.ActionLink("Add photo", "AddPhoto", new { page = Model.PageInfo?.PageNumber })
                }
                else
                {
                    @Html.ActionLink("Add photo", "AddPhoto", new { page = Model.PageInfo?.PageNumber, photoName = ViewBag.PhotoName })
                }
            </h5>
        }
        else
        {
            <h5>@Html.ActionLink("Back to profile", $"Index/{Model.ChosenUser.Id}", "Home")</h5>
        }
    </div>
    <div class="col-md-6 text-right">
        <br />
        <div class="row col-md-12 form-inline">
            @using (Html.BeginForm("SearchPhotos", "Photo", FormMethod.Post))
            {
                <div class="form-group">
                    <input type="text" class="form-control" name="photoName" value="@ViewBag.PhotoName" placeholder="Enter photo name ..." />
                </div>
                <div class="form-group">
                    <input type="submit" class="btn btn-default" value="Search" />
                </div>
                @Html.HiddenFor(model => model.ChosenUser.UserName, new { @id = "userName", @Name = "userName" })
                @Html.HiddenFor(model => model.CurrentPhoto.Id, new { @id = "currentPhotoId", @Name = "currentPhotoId" })
                <input type="hidden" name="page" value="1" />
            }
        </div>
        <div class="row col-md-12">
            <h5>
                @Html.ActionLink("Show all photos", "Photos", 
               new { userName = Model.ChosenUser.UserName, page = 1, currentPhotoId = Model.CurrentPhoto?.Id ?? 0 })
            </h5>
        </div>
    </div>
</div>

<hr class="col-md-12" />

<div class="row col-md-12 form-horizontal">
    <div class="row col-md-12 form-group">
        @PhotosList(Model.Photos, Model.ChosenUser.UserName, Model.PageInfo?.PageNumber ?? 0)
    </div>
    <br />
    <div class="row col-md-12">
        <div class="btn-group">
            @if (string.IsNullOrWhiteSpace(ViewBag.PhotoName))
            {
                @Html.PageLinks(Model.PageInfo, x => Url.Action("Photos",
               new
               {
                   userName = Model.ChosenUser.UserName,
                   page = x,
                   currentPhotoId = Model.CurrentPhoto?.Id ?? 0,
               }))
            }
            else
            {
                @Html.PageLinks(Model.PageInfo, x => Url.Action("SearchPhotos",
               new
               {
                   userName = Model.ChosenUser.UserName,
                   page = x,
                   currentPhotoId = Model.CurrentPhoto?.Id ?? 0,
                   photoName = ViewBag.PhotoName
               }))
            }
        </div>
    </div>
    <br />
    @if (Model.CurrentPhoto != null)
    {
        <div class="row form-group">
            <div class="col-md-6">
                <img class="big-photo" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.CurrentPhoto.Image)" />
            </div>
            <div class="col-md-6 form-horizontal">
                @BigPhotoDescription(Model.CurrentPhoto, Model.CurrentPhotoRatings, Model.ChosenUser.UserName, 
               Model.RatingOfCurrentUser, Model.PageInfo.PageNumber)
            </div>
        </div>
    }
</div>



@helper BigPhotoDescription(MvcProject.Models.PhotoViewModel photo, IEnumerable<MvcProject.Models.RatingViewModel> currentPhotoRatings,
    string chosenUserName, int? ratingOfCurrentUser, int page)
{
    <div class="form-group">
        <h3>@photo.Name</h3>
    </div>
    <div class="form-group">
        <p>@photo.Description</p>
    </div>
    <div class="form-group">
        <label class="control-label">Total rate: @photo.TotalRate</label>
    </div>
    <div class="form-group">
        <div class="form-group col-md-3">
            <div class="dropdown">
                <div data-toggle="dropdown">
                    <span class="glyphicon glyphicon-thumbs-up"></span>
                    Who rated
                </div>
                <div class="dropdown-menu">
                    @Html.UsersWhoRated(currentPhotoRatings, x => Url.Action("Index", "Home", new { id = x }))
                </div>
            </div>
        </div>
        <div class="form-group col-md-4">
            <div class="dropdown">
                <div data-toggle="dropdown">
                    <span class="glyphicon glyphicon-star"></span>
                    Rate this photo
                </div>
                <div class="dropdown-menu">
                    @if (string.IsNullOrWhiteSpace(ViewBag.PhotoName))
                    {
                        @Html.StarsMenu(5, x => Url.Action("Rate", "Rating", 
                       new { userName = chosenUserName, page = page, photoId = photo.Id, rating = x }))
                    }
                    else
                    {
                        @Html.StarsMenu(5, x => Url.Action("Rate", "Rating",
                       new { userName = chosenUserName, page = page, photoId = photo.Id, photoName = ViewBag.PhotoName, rating = x }))
                    }
                </div>
            </div>
        </div>
        <div class="form-group col-md-5">
            @if (ratingOfCurrentUser == null)
            {
                <p class="text-muted">My rate: no rating</p>
            }
            else
            {
                <div>
                    <span class="glyphicon glyphicon-ok"></span>
                    My rate: @ratingOfCurrentUser |
                    @if (string.IsNullOrWhiteSpace(ViewBag.PhotoName))
                    {
                        <a href="@Url.Action("RemoveRate", "Rating", new { userName = chosenUserName, page = page, photoId = photo.Id })">
                            <span class="glyphicon glyphicon-trash"></span>
                            Remove rate
                        </a>
                    }
                    else
                    {
                        <a href="@Url.Action("RemoveRate", "Rating", 
                                new { userName = chosenUserName, page = page, photoId = photo.Id, photoName = ViewBag.PhotoName })">
                            <span class="glyphicon glyphicon-trash"></span>
                            Remove rate
                        </a>
                    }
                </div>
            }
        </div>
    </div>
    if (User.Identity.Name == chosenUserName)
    {
        <div class="form-group">
            @if (string.IsNullOrWhiteSpace(ViewBag.PhotoName))
            {
                @Html.ActionLink("Edit info", "EditPhoto", new { id = photo.Id, page = page })
                <span>|</span>
                @Html.ActionLink("Delete", "DeletePhoto", new { id = photo.Id, page = page })
            }
            else
            {
                @Html.ActionLink("Edit info", "EditPhoto", new { id = photo.Id, page = page, photoName = ViewBag.PhotoName })
                <span>|</span>
                @Html.ActionLink("Delete", "DeletePhoto", new { id = photo.Id, page = page, photoName = ViewBag.PhotoName })
            }
        </div>
    }
}

@helper PhotosList(IEnumerable<MvcProject.Models.PhotoViewModel> photos, string chosenUserName, int page)
{
    if (photos != null)
    {
        foreach (var photo in photos)
        {
            <div class="col-md-3">
                <div class="col-md-5">
                    @if (string.IsNullOrWhiteSpace(ViewBag.PhotoName))
                    {
                        <a href="@Url.Action("Photos", new { userName = chosenUserName, page = page, currentPhotoId = photo.Id })">
                            <img class="photo-in-list" src="data:image/jpeg;base64,@Convert.ToBase64String(photo.Image)" />
                        </a>
                    }
                    else
                    {
                        <a href="@Url.Action("SearchPhotos", new { userName = chosenUserName, page = page, currentPhotoId = photo.Id, photoName = ViewBag.PhotoName })">
                            <img class="photo-in-list" src="data:image/jpeg;base64,@Convert.ToBase64String(photo.Image)" />
                        </a>
                    }
                </div>
                <div class="col-md-7 name-overflow-cut">
                    <h4>@photo.Name</h4>
                    <p>Total rate: @photo.TotalRate</p>
                </div>
            </div>
        }
    }
}
